# Description: 
# A medium scale NK model with capital, capital adjustement costs, capital utilization costs, habits, and price indexation.
# The model is inspired by "A Baseline DSGE Model" (Fernández-Villaverde and Rubio-Ramírez, manuscript), by "The zero lower bound, the dual mandate, and unconventional dynamics" (Gavin et al., 2015 JEDC), and the WP version of "The Emprirical Implications of the Interest-Rate Lower Bound" (Gust et al, Fed WP 2012-083)
# Authors: Gregor Boehl [mail@gregorboehl.com], Sven Eis
---

name: 'med_scale_nk_plt'
variables: [ p, y_prod, g, bprof, dd, ds, t, qb, b, pi, pitilde, lam, y, mc, w, n, Rk, cap_util, k , c, R, i, rp, piw, piwtilde, q, cap_util_costs, Rn]
parameters: [ kappa, beta , epsilonp, phip, alpha, a, h, epsilonw, phiw, chi, eta, aw, delta, phii, sigmaa , rho_r, rho_rp, phi_pi, phi_y]
shocks: [ e_rp ]

equations:
    # Firms
    ~ (pi/pitildeLag - 1)*pi/pitildeLag = beta*lamPrime/lam*(piPrime/pitilde - 1)*piPrime/pitilde*yPrime/y + epsilonp/phip*(mc-(epsilonp-1)/epsilonp)
    ~ log(piPrime) = log(pPrime)-log(p)
    ~ mc = (w*n)/((p*y)*(1-alpha))
    ~ p*Rk=alpha/(1-alpha)*(w*n)/(cap_util*k)
    ~ pitilde= piSS**a*pi**(1-a)
    ~ y_prod = (k*cap_util)**alpha*n**(1-alpha)
    #~ MPK = alpha*mc*y/(cap_util*k) #checken ob diese gleichung stimmt
       
    # Households
    ~ lam = 1/(c-h*cLag) - beta*h/(cPrime-h*c)
    ~ lam = beta*R*rp*(1/piPrime)*lamPrime
    ~ phiw*(piw/piwtilde - 1)*piw/piwtilde = beta*phiw*((piwPrime/piwtildePrime - 1)*piwPrime/piwtildePrime)+n*lam*epsilonw*(chi*((n**eta)/lam)-(epsilonw-1)/epsilonw*w/p)
    ~ piw = w/wLag
    ~ piwtilde = piSS**aw*piLag**(1-aw) 
    ~ q=beta*lamPrime/lam*RkPrime*cap_utilPrime-cap_util_costsPrime+(1-delta)*qPrime
    ~ 1 = q*(1 - phii/2*(i/iLag - 1)**2 - phii*(i/iLag - 1)*i/iLag) + beta*lamPrime/lam*qPrime*phii*(iPrime/i - 1)*(iPrime/i)**2
    ~ Rk = RkSS*exp(sigmaa*(cap_util-1))
    ~ cap_util_costs = RkSS/sigmaa*(exp(sigmaa*(cap_util-1))-1)
    ~ k = (1-delta)*kLag + (1 - phii/2*(i/iLag - 1)**2)*i
    ~ dd + c + t + phii/2*(i/iLag - 1)**2*i = (w/p)*n - phiw/2*(piw/piwSS - 1)**2 + rpLag*RLag/p*ddLag + (1 - mc - phip/2*(pi/pitildeLag - 1)**2)*y + (q*(1 - phii/2*(i/iLag - 1)**2) - 1)*i + bprof
    # eigentlich w/p*n



    # Financial Intermediary
    ~ ds = qb*b + q*k
    ~ rp*R = (1 + kappa*qbPrime)/qb
    ~ bprof = ((1+kappa*qb)*bLag + RkLag*qLag*kLag - rpLag*RLag*ddLag)/p
   
    # Government
    ~ g + (1+kappa*qb)/p*bLag = qb*b + t
    ~ g = 0.2*y
    ~ b = y/qb

    # Central Bank
    ~ Rn = (RSS*((pi/piSS)**phi_pi)*((y/ySS)**phi_y))**(1-rho_r)*RnLag**rho_r 
    ~ R = max(1, Rn)

    # Clearing
    ~ c + i + g + phii/2*(i/iLag - 1)**2*i + cap_util_costs*k = (1-phip*(pi/pitildeLag - 1)**2/2)*y_prod
    # (piw/piwSS - 1)**2/2  with our without?
    ~ c + i + g = y

    # Exogenous Process
    ~ rp=rpSS*(rpLag/rpSS)**rho_rp*exp(e_rp)

steady_state:
    fixed_values:
        # parameters:
        epsilonp: 5.
        alpha: 0.33
        beta: 0.995
        epsilonw: 3.
        phip: 113.36
        delta: 0.025
        phii: 3.48
        #phi_pi: 1.9
        phi_pi: 1.5
        phi_y: 0.1
        h: 0.52
        rho_r: .8
        eta: 0.33
        rho_rp: .8
        a: .44
        aw: .55
        phiw: 4029.73
        sigmaa: 5.64
        kappa: 0.975

        # steady states: 
        pi: 1.
        cap_util: 1.
        rp: 1.
        R: pi/beta
        Rn: R
        n: 0.33
        q: 1.
        pitilde: pi
        piw: pi
        piwtilde: pi
        mc: (epsilonp-1)/epsilonp

    init_guesses:
        chi: 1e+1
        #MPK: alpha*mc/20
